1). Topological sort - Find SP, work only in case DAG only, that is with Directed Graph no-cycle 
	Longest Path can also be find by Topological Sort, by making all the weights negative, for example as we know that -6 is smaller than -4.
	so in positive will find 4 and with negative will find path with -6.
	And Can also be done by not negating the weights like we intialize cost to reach to every node to -Infinity,
	then will take the max cost from relax function , so will maximize the cost.
	
	Application of Longest Path: Job Scheduling longest time that it will take.
	Complexity is O(E+V)
	
2). Djikstra - Works for DAG, non-DAG, undirected-graph, but not in case of negative-weights.
	1----(cost->5)----2
	|                |
	(cost->10)       (cost-> -20)
	|                |
	3----(cost->6)----4 
	
	why it not works for negative weights, so will take 1-2 then will take 2 from PQ then mark it as visited and if two will come as
	child of anyother will not consider it, so cost will remain inplace of minimum cost to reach 2 from 1 is -4.
	Application Examples: Seam carving, resolution adjustments.
	
	Complexity is O(ElogV)
	Due to Heap.
	
3). Bellman-Ford - Works for Negative-weight as well, but not for negative-cycle, negative-cycle can be found by running by running 
algo on every node V times in place of |V-1|  times.
Negative Cycle Application : Currency Conversion Hack/Arbitrage

 	Complexity is O(EV)

4). Belman Ford with Queue.